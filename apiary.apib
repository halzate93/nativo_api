FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# nativo

Polls is a simple API allowing consumers to view polls and vote in them.

## Create users [/users]

### Creates a user [POST]

+ Request (application/json)
        
        {
            "user_name": "halzate93",
            "token": "FB_HFG425",
            "email": "halzate93@gmail.com",
            "name": "Héctor Camilo Alzate",
        }

+ Response 200 (application/json)

        {
            "id": "DB_ASDFNKLE23",
            "already_created": true
        }


## Retrieve user data [/users/{id}]

### Gets the user data [GET]

+ Response 200 (application/json)

        {
            "user_name": "halzate93",
            "token": "FB_HFG425",
            "email": "halzate93@gmail.com",
            "name": "Héctor Camilo Alzate",
            "language": "ES"
        }
        
### Updates the user data [PUT]

+ Request (application/json)

        {
            "user_name": "halzate93",
            "token": "FB_HFG425",
            "email": "halzate93@gmail.com",
            "name": "Héctor Camilo Alzate",
            "language": "ES"
        }
        
+ Response 200


## Completed sections in the game [/users/{id}/progress]

### Gets the progress [GET]

+ Response 200 (application/json)

        {
            "power_ups": 
            {
                "fire_balls": 3  
            },
            "progress":
            {
                
            }
        }
        
### Stores the progress [POST]

+ Request (application/json)

        {
            "power_ups": 
            {
                "fire_balls": 3  
            },
            "progress":
            {
            
            }
        }
        
+ Response 200
        
## Sets the user as interested in a new section [/user/{id}/interests]

### Suscribes a user [POST]

+ Request (application/json)

        {
            "section": "shop"
        }

+ Response 200

## Describes the content of the application in worlds and stops [/content/{hash}]

### Retrieves the latest version of the content [GET]

+ Response 200 (application/json)

        {
            "worlds": [
                {
                    "stops":
                    {
                        "type": "Video",
                        "url": ""
                    },
                    {
                        "type": "Text",
                        "content": "Lorem ipsum"
                    },
                    {
                        "type": "Image",
                        "bundle_id": "code/html5/intro"
                    }
                }
            ]
        }